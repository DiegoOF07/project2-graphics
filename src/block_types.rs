use crate::block::Block;
use crate::material::Material;
use raylib::prelude::*;

/// Enum que define los tipos de bloques disponibles
#[derive(Clone)]
pub enum BlockType {
    Grass,
    Dirt,
    Stone,
    Cobble,
    WoodLog,
    Leaves,
    Sand,
    Glass,
    Reflect,
    CherryLeaves,
    Sun,
    Magma,
}

impl BlockType {
    /// Devuelve el material asociado a cada tipo de bloque
    pub fn material(&self) -> Material {
        match self {
            BlockType::Grass => Material {
                diffuse: Vector3::new(0.4, 0.8, 0.3),
                albedo: [0.9, 0.1],
                specular: 5.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/grass_top.jpg".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Dirt => Material {
                diffuse: Vector3::new(0.4, 0.3, 0.2),
                albedo: [0.9, 0.1],
                specular: 2.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/dirt.jpg".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Stone => Material {
                diffuse: Vector3::new(0.5, 0.5, 0.5),
                albedo: [0.9, 0.1],
                specular: 3.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/stone.jpg".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Cobble => Material {
                diffuse: Vector3::new(0.6, 0.6, 0.6),
                albedo: [0.8, 0.2],
                specular: 15.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/cobble.png".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::WoodLog => Material {
                diffuse: Vector3::new(0.4, 0.3, 0.1),
                albedo: [0.8, 0.2],
                specular: 5.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/cherry_log.png".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Leaves => Material {
                diffuse: Vector3::new(0.2, 0.6, 0.2),
                albedo: [0.9, 0.1],
                specular: 3.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/leaves_oak.jpg".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::CherryLeaves => Material {
                diffuse: Vector3::new(0.98, 0.88, 0.94),
                albedo: [0.9, 0.1],
                specular: 3.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/cherry_leaves.png".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Sand => Material {
                diffuse: Vector3::new(0.96, 0.87, 0.7),
                albedo: [0.8, 0.2],
                specular: 12.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: Some("textures/sand.png".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Glass => Material {
                diffuse: Vector3::new(0.9, 0.9, 1.0),
                albedo: [0.1, 0.9],
                specular: 200.0,
                reflectivity: 0.0,
                transparency: 0.8,
                refractive_index: 1.5,
                texture: Some("textures/glass.png".to_string()),
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Reflect => Material {
                diffuse: Vector3::new(0.9, 0.9, 0.95),
                albedo: [0.1, 0.9],
                specular: 100.0,
                reflectivity: 0.8,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: None,
                normal_map_id: None,
                emission_color: None,
                emission_strength: 0.0,
            },
            BlockType::Sun => Material {
                diffuse: Vector3::new(1.0, 0.9, 0.6),
                albedo: [0.0, 0.0],
                specular: 0.0,
                reflectivity: 0.0,
                transparency: 0.0,
                refractive_index: 1.0,
                texture: None,
                normal_map_id: None,
                emission_color: Some(Vector3::new(1.0, 0.9, 0.9)),
                emission_strength: 10.0,
            },
            BlockType::Magma => Material {
                diffuse: Vector3::new(0.7, 0.28, 0.1),
                albedo: [0.3, 0.7],                   
                specular: 50.0,                       
                reflectivity: 0.1,                    
                transparency: 0.0,                    
                refractive_index: 1.0,                
                texture: Some("textures/magma.png".to_string()),                        
                normal_map_id: None,                  
                emission_color: Some(Vector3::new(0.75, 0.32, 0.12)), 
                emission_strength: 2.0,               
            },
        }
    }

    /// Crea un bloque de este tipo en una posiciÃ³n dada
    pub fn to_block(&self, position: Vector3, size: f32) -> Block {
        match self {
            BlockType::Sun => Block::new_emissive(
                position,
                size,
                self.material(),
                Vector3::new(1.0, 0.9, 0.9),
                8.0,
            ),
            BlockType::Magma => Block::new_emissive(
                position,
                size,
                self.material(),
                Vector3::new(0.75, 0.32, 0.12),
                0.5,
            ),
            _ => Block::new(position, size, self.material()),
        }
    }
}
